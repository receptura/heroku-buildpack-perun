#!/usr/bin/env bash
set -e -o pipefail
mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
env_dir="$3"
export BOOT_LOCAL_REPO="$cache/.m2/repository"
export BOOT_JVM_OPTIONS="-Xmx384m -Xss512k"
JVM_COMMON_BUILDPACK="https://codon-buildpacks.s3.amazonaws.com/buildpacks/heroku/jvm-common.tgz"
mkdir -p /tmp/jvm-common
curl --silent --location $JVM_COMMON_BUILDPACK | tar xzm -C /tmp/jvm-common --strip-components=1
. /tmp/jvm-common/bin/util
. /tmp/jvm-common/bin/java
javaVersion=$(detect_java_version ${build})
echo -n "-----> Installing OpenJDK ${javaVersion}..."
install_java ${build} ${javaVersion}
jdk_overlay ${build}
echo "done"
echo -n "-----> Copying boot..."
mkdir -p "$build/.bootbin"
cp "$cache/boot" "$build/.bootbin/"
echo " done"

if [[ -d "$env_dir" ]]
then
    # load the buildpack config vars
    for key in BOOTBUILD_CMD BOOTBUILD_CONFIG_WHITELIST
    do
        if [[ -f "$env_dir/$key" ]]
        then
            export "$key=$(cat "$env_dir/$key")"
        fi
    done
    # load the config vars allowed by BOOTBUILD_CONFIG_WHITELIST
    # (inspired by the way Clojure buildpack does it)
    if [[ -n "$BOOTBUILD_CONFIG_WHITELIST" ]]
    then
        for key in $BOOTBUILD_CONFIG_WHITELIST
        do
            if [[ -f "$env_dir/$key" ]]
            then
                export "$key=$(cat "$env_dir/$key")"
            fi
        done
    fi
fi
if [[ -f "$env_dir/AWS_ACCESS_KEY" ]]
  then
    export "AWS_ACCESS_KEY=$(cat "$env_dir/AWS_ACCESS_KEY")"
fi

if [[ -f "$env_dir/AWS_SECRET_KEY" ]]
  then
    export "AWS_SECRET_KEY=$(cat "$env_dir/AWS_SECRET_KEY")"
fi
boot_cmd=${BOOTBUILD_CMD:-"boot deploy"}
echo "-----> Running: $boot_cmd"
export PATH="$build/.bootbin:$PATH"
cd $build && $boot_cmd
echo -n "-----> Copying jars..."
cp -R "$cache/.m2" "$build/.m2"
echo " done"
mkdir -p "$build/.profile.d"
cat << EOF > "$build/.profile.d/boot-env.sh"
export PATH="\$HOME/.bootbin:\$PATH"
limit=\$(ulimit -u)
case \$limit in
256)   # 1X Dyno
  default_java_opts="-Xmx384m -Xss512k"
  ;;
512)   # 2X Dyno
  default_java_opts="-Xmx768m"
  ;;
32768) # PX Dyno
  default_java_opts="-Xmx4g"
  ;;
*)
  default_java_opts="-Xmx384m -Xss512k"
  ;;
esac

export BOOT_JVM_OPTIONS=\${BOOT_JVM_OPTIONS:-"\${default_java_opts} -Dfile.encoding=UTF-8"}
EOF
